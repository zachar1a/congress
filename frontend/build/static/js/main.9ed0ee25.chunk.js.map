{"version":3,"sources":["Components/BillCard/BillCard.js","Components/Navbar/Navbar.js","Components/BillInfo/BillInfo.js","Components/Card/Card.js","Components/VoteResults/VoteResults.js","Components/LatestBill/LatestBill.js","Components/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["BillCard","className","this","props","sponsorParty","sponsor","sponsorState","chamber","introduced","billid","title","href","infoUrl","slug","React","Component","Navbar","to","BillInfo","state","bills","fetch","then","data","json","setState","console","log","billItems","map","bill","bill_id","sponsor_party","sponsor_name","sponsor_state","Card","name","style","color","result","action","VoteResults","results","resultItems","number","Result","voteChamber","voteName","voteTitle","voteResult","voteAction","Home","LatestBill","Route","require","Switch","App","path","component","exact","Boolean","window","location","hostname","match","BrowserRouter","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9ed0ee25.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./BillCard.css\";\n\nclass BillCard extends React.Component{\n\trender(){\n\t\t/*\n\t\t * This needs to be dynamic styling for \n\t\t * the result in props, red if failed,\n\t\t * green if passed\n\t\t *\n\t\t */\n\n\t\treturn (\n\t\t\t<div className=\"BillCard\">\n\t\t\t\t<h2>[{this.props.sponsorParty}] {this.props.sponsor} {this.props.sponsorState} {this.props.chamber}</h2>\n\t\t\t\t<p>Date: {this.props.introduced}</p>\n\t\t\t\t<h3>{this.props.billid} {this.props.title}</h3>\n\t\t\t\t<a href={this.props.infoUrl}>{this.props.slug} Info</a>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default BillCard;\n","import React from \"react\";\nimport \"./Navbar.css\";\n\nimport { Link } from \"react-router-dom\"\n\n\n\nclass Navbar extends React.Component{\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<ul className=\"navbar\">\n\t\t\t\t\t<li><Link to=\"/\">Home</Link></li>\n\t\t\t\t\t<li><Link to=\"/Bills\">Bills</Link></li>\n\t\t\t\t\t<li><Link to=\"/Votes\">Votes</Link></li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t);\n\t};\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport BillCard from \"../BillCard/BillCard\";\nimport Navbar from \"../Navbar/Navbar\";\n\n//const url = \"https://state-of-congress.herokuapp.com/api/info/\"\n\n//This is for testing the backend\nconst url = \"http://localhost:8000/api/info/\"\nclass BillInfo extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            bills: [],\n        };\n    }\n    componentDidMount(){\n        fetch(url)\n        .then(data=> data.json())\n        .then(data=>this.setState({bills:data}));\n        console.log(this.state.bills);\n    }\n\n    render(){\n        const billItems = this.state.bills.map((bill)=>{\n            return(\n\t\t    <BillCard billid={bill.bill_id} \n\t\t    \t      title={bill.title}\n\t\t    \t      chamber={bill.chamber}\n\t\t    \t      introduced={bill.introduced}\n\t\t    \t      sponsorParty={bill.sponsor_party}\n\t\t    \t      sponsor={bill.sponsor_name}\n\t\t    \t      sponsorState={bill.sponsor_state}\n\t\t    \t      infoUrl={bill.infoUrl}\n\t\t    \t      slug={bill.slug}/>\n            );\n         });\n        return[\n\t\t<h1 className=\"bill-header\">Current Bills</h1>,\n\t\t<Navbar />,\n\t\tbillItems,\n\t]\n        };\n}\n\nexport default BillInfo;\n","import React from \"react\";\nimport \"./Card.css\";\n\nclass Card extends React.Component{\n\trender(){\n\t\t/*\n\t\t * This needs to be dynamic styling for \n\t\t * the result in props, red if failed,\n\t\t * green if passed\n\t\t *\n\t\t */\n\n\t\tconst resultStyle={\n\t\t\tcolor:\"green\"\n\t\t};\n\n\t\treturn (\n\t\t\t<div className=\"card\">\n\t\t\t\t<h2>{this.props.chamber} {this.props.name}</h2>\n\t\t\t\t<h4>{this.props.title}</h4>\n\t\t\t\t<h3><span style={resultStyle}>{this.props.result}</span> {this.props.action}</h3>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"../Card/Card\";\nimport Navbar from \"../Navbar/Navbar\";\nimport \"./VoteResults.css\";\n\nconst url = \"https://state-of-congress.herokuapp.com/api/results/\"\n\n//This is for testing the backend\n//const url = \"http://localhost:8000/api/results/\"\nclass VoteResults extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            results: [],\n        };\n    }\n    componentDidMount(){\n        fetch(url)\n        .then(data=> data.json())\n        .then(data=>this.setState({results:data}));\n        console.log(this.state.results);\n    }\n\n    render(){\n        const resultItems = this.state.results.map((result)=>{\n            return(\n\t\t    <Card name={result.number} title={result.title} chamber={result.chamber} result={result.Result} action={result.action} />\n\t\t    /*\n                <div className=\"resultCard\">\n\t\t    <br/>\n                    <br/>Number: <i>{result.number}</i> \n\t\t    <br/>Title: <b>{result.title}</b>\n\t\t    \t<br/><a href={result.Source}>Congressional Votes</a>\n                        <br/>Action: {result.action}\n                        <br/>Result: {result.Result}\n\t\t    <br/>\n                </div>\n\t    */\n            );\n         });\n        return[\n\t\t<h1 className=\"vote-header\">Current Votes</h1>,\n\t\t<Navbar />\n            \t,resultItems\n\t];\n        };\n}\n\nexport default VoteResults;\n","import React from \"react\";\nimport BillCard from \"../BillCard/BillCard\";\nimport Card from \"../Card/Card\";\n\nconst latestBillUrl= \"https://state-of-congress.herokuapp.com/latest-bill/\";\nconst latestVoteUrl= \"https://state-of-congress.herokuapp.com/latest-vote/\";\n\n/*\nconst latestBillUrl= \"http://localhost:8000/latest-bill/\"\nconst latestVoteUrl= \"http://localhost:8000/latest-vote/\"\n*/\n/*\n * These are for development\n*/\n\n//This is for testing the backend\n//const url = \"http://localhost:8000/api/info/\"\nclass BillInfo extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n\t\tsponsorParty:'',\n\t\tsponsor:'',\n\t\tsponsorState:'',\n\t\tintroduced:'',\n\t\tbillid:'',\n\t\ttitle:'',\n\t\tinfoUrl:'',\n\t\tslug:'',\n\n\t\tvoteChamber:'',\n\t\tvoteName:'',\n\t\tvoteTitle:'',\n\t\tvoteResult:'',\n\t\tvoteAction:''\n        };\n    }\n    componentDidMount(){\n        fetch(latestBillUrl)\n        .then(data=> data.json())\n        .then(data=>this.setState({\n\t\tsponsorParty:data.sponsor_party,\n\t\tsponsor:data.sponsor_name,\n\t\tsponsorState:data.sponsor_state,\n\t\tintroduced:data.introduced,\n\t\tbillid:data.bill_id,\n\t\ttitle:data.title,\n\t\tinfoUrl:data.infoUrl,\n\t\tslug:data.slug\n\t}));\n\n\tfetch(latestVoteUrl)\n\t\t.then(data=>data.json())\n\t\t.then(data=>this.setState({ \n\t\t\tvoteChamber:data.chamber,\n\t\t\tvoteName:data.name,\n\t\t\tvoteTitle:data.title,\n\t\t\tvoteResult:data.Result,\n\t\t\tvoteAction:data.action\n\t\t})\n\t);\n    }\n\n    render(){\n        return[\n\t\t<h1 className=\"bill-header\">Latest Bill</h1>,\n\t\t<BillCard sponsorParty={this.state.sponsorParty}\n\t\t\t  sponsor={this.state.sponsor} \n\t\t\t  sponsorState={this.state.sponsorState}\n\t\t\t  introduced={this.state.introduced}\n\t\t\t  billid={this.state.billid}\n\t\t\t  title={this.state.title}\n\t\t\t  infoUrl={this.state.infoUrl}\n\t\t\t  slug={this.state.slug}\n\t\t/>,\n\t\t<h1 className=\"vote-header\">LatestVote</h1>,\n\t\t<Card chamber={this.state.voteChamber}\n\t\t      name={this.state.voteName}\n\t\t      title={this.state.voteTitle}\n\t\t      result={this.state.voteResult}\n\t\t      action={this.state.voteAction}\n\t\t/>\n\t]\n        };\n}\n\nexport default BillInfo;\n","import React from \"react\";\nimport Navbar from \"../Navbar/Navbar\";\nimport LatestBill from \"../LatestBill/LatestBill\";\n\nimport \"./Home.css\";\n\n//const Link = require(\"react-router-dom\").Link;\n\nclass Home extends React.Component{\n\n\n    render(){\n            return(\n\t\t    <div>\n\t\t    \t<h2 className=\"title\">State Of Congress</h2>\n\t\t    \t<Navbar />\n\t\t    \t<LatestBill />\n\t\t    </div>\n            );\n        };\n}\n\nexport default Home;\n","import React from \"react\";\nimport BillInfo from './Components/BillInfo/BillInfo'\nimport VoteResults from './Components/VoteResults/VoteResults'\nimport Home from './Components/Home/Home'\nimport './App.css';\n\n\nconst Route = require(\"react-router-dom\").Route;\nconst Switch = require(\"react-router-dom\").Switch;\n\n\nfunction App() {\n\t/*\n\tconst voteTitleStyle={\n\t\twidth:\"40%\",\n\t\tmargin:\"auto\"\n\t};\n\tconst BillTitleStyle={\n\t\twidth:\"40%\",\n\t\tmargin:\"auto\"\n\t};\n\t*/\n  return (\n    <div className=\"App\">\n\t  <main>\n\t  <Switch>\n\t \t<Route path=\"/\" component={Home} exact/>\n\t \t<Route path=\"/Bills\" component={BillInfo} exact/>\n\t \t<Route path=\"/votes\" component={VoteResults} exact/>\n\t  </Switch>\n\t  </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst BrowserRouter = require(\"react-router-dom\").BrowserRouter;\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<App />\n\t</BrowserRouter>\n  ,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}